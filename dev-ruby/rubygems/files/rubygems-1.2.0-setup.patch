--- setup.rb.orig	2008-06-21 19:51:11.000000000 -0400
+++ setup.rb	2008-06-24 20:04:27.000000000 -0400
@@ -128,8 +128,8 @@ else
     lib_dir = Gem::ConfigMap[site_or_vendor]
     bin_dir = Gem::ConfigMap[:bindir]
   else
-    lib_dir = File.join prefix, 'lib'
-    bin_dir = File.join prefix, 'bin'
+    lib_dir = File.join prefix, Gem::ConfigMap[:sitelibdir]
+    bin_dir = File.join prefix, Gem::ConfigMap[:bindir]
   end
 end
 
@@ -240,19 +240,6 @@ abort "#{deprecation_message}"
   end
 end
 
-# Remove source caches
-if install_destdir.empty?
-  require 'rubygems/source_info_cache'
-
-  user_cache_file = File.join(install_destdir,
-                              Gem::SourceInfoCache.user_cache_file)
-  system_cache_file = File.join(install_destdir,
-                                Gem::SourceInfoCache.system_cache_file)
-
-  rm_f user_cache_file if File.writable? File.dirname(user_cache_file)
-  rm_f system_cache_file if File.writable? File.dirname(system_cache_file)
-end
-
 # install RDoc
 
 gem_doc_dir = File.join Gem.dir, 'doc'
@@ -262,10 +249,6 @@ rubygems_doc_dir = File.join gem_doc_dir
 if File.writable? gem_doc_dir and
    (not File.exist? rubygems_doc_dir or
     File.writable? rubygems_doc_dir) then
-  puts "Removing old RubyGems RDoc and ri"
-  Dir[File.join(Gem.dir, 'doc', 'rubygems-[0-9]*')].each do |dir|
-    rm_rf dir
-  end
 
   def run_rdoc(*args)
     begin
@@ -277,7 +260,7 @@ if File.writable? gem_doc_dir and
 
     args << '--quiet'
     args << '--main' << 'README'
-    args << '.' << 'README' << 'LICENSE.txt' << 'GPL.txt'
+    args << '.' << 'README'
 
     r = RDoc::RDoc.new
     r.document args
@@ -323,4 +306,3 @@ puts
 puts "If `gem` was installed by a previous RubyGems installation, you may need"
 puts "to remove it by hand."
 puts
-
