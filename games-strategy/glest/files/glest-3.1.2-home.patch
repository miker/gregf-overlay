diff -ur glest-source-3.1.2/glest_game/ai/ai_interface.cpp test_patch/glest_game/ai/ai_interface.cpp
--- glest-source-3.1.2/glest_game/ai/ai_interface.cpp	2008-01-22 18:10:56.000000000 -0200
+++ test_patch/glest_game/ai/ai_interface.cpp	2008-05-27 10:18:45.000000000 -0300
@@ -48,7 +48,9 @@
 
 	//clear log file
 	if(logLevel>0){
-		FILE *f= fopen(getLogFilename().c_str(), "wt");
+		char path[PATH_MAX];
+		snprintf(path, PATH_MAX, "%s/.glest/%s", getenv("HOME"), getLogFilename().c_str());
+		FILE *f= fopen(path, "wt");
 		if(f==NULL){
 			throw runtime_error("Can't open file: "+getLogFilename());
 		}
@@ -71,7 +73,9 @@
 		string logString= "(" + intToStr(factionIndex) + ") " + s;
 
 		//print log to file
-		FILE *f= fopen(getLogFilename().c_str(), "at");
+		char path[PATH_MAX];
+		snprintf(path, PATH_MAX, "%s/.glest/%s", getenv("HOME"), getLogFilename().c_str());
+		FILE *f= fopen(path, "at");
 		if(f==NULL){
 			throw runtime_error("Can't open file: "+getLogFilename());
 		}
diff -ur glest-source-3.1.2/glest_game/facilities/logger.cpp test_patch/glest_game/facilities/logger.cpp
--- glest-source-3.1.2/glest_game/facilities/logger.cpp	2008-01-22 18:10:52.000000000 -0200
+++ test_patch/glest_game/facilities/logger.cpp	2008-05-27 11:34:36.000000000 -0300
@@ -48,7 +48,7 @@
 void Logger::add(const string &str,  bool renderScreen){
 	FILE *f=fopen(fileName.c_str(), "at+");
 	if(f==NULL){
-		throw runtime_error("Error opening log file"+ fileName);
+		throw runtime_error("Error opening log file "+ fileName);
 	}
 	fprintf(f, "%s\n", str.c_str());
     fclose(f);
@@ -79,7 +79,7 @@
 
 	FILE *f= fopen(fileName.c_str(), "wt+");
 	if(f==NULL){
-		throw runtime_error("Error opening log file"+ fileName);
+		throw runtime_error("Error opening log file "+ fileName);
 	}
     
     fprintf(f, "%s", s.c_str());
diff -ur glest-source-3.1.2/glest_game/game/game.cpp test_patch/glest_game/game/game.cpp
--- glest-source-3.1.2/glest_game/game/game.cpp	2008-03-04 05:14:09.000000000 -0300
+++ test_patch/glest_game/game/game.cpp	2008-05-27 01:59:16.000000000 -0300
@@ -400,9 +400,10 @@
 		}
 		else if(key=='E'){
 			for(int i=0; i<100; ++i){
-				string path= "screens/screen" + intToStr(i) + ".tga";
+				char path[PATH_MAX];
+				snprintf(path, PATH_MAX, "%s/.glest/screens/screen%d.tga", getenv("HOME"), i);
 				
-				FILE *f= fopen(path.c_str(), "rb");
+				FILE *f= fopen(path, "rb");
 				if(f==NULL){
 					Renderer::getInstance().saveScreen(path);
 					break;
diff -ur glest-source-3.1.2/glest_game/main/main.cpp test_patch/glest_game/main/main.cpp
--- glest-source-3.1.2/glest_game/main/main.cpp	2008-03-04 05:14:09.000000000 -0300
+++ test_patch/glest_game/main/main.cpp	2008-05-27 10:24:51.000000000 -0300
@@ -13,6 +13,7 @@
 
 #include <string>
 #include <cstdlib>
+#include <sys/stat.h>
 
 #include "game.h"
 #include "main_menu.h"
@@ -36,8 +37,10 @@
 
 class ExceptionHandler: public PlatformExceptionHandler{
 public:
-	virtual void handle(string description, void *address){
-		FILE *f= fopen("crash.txt", "at");
+	virtual void handle(string description, void *address){		
+		char path[PATH_MAX];
+		snprintf(path, PATH_MAX, "%s/.glest/crash.txt", getenv("HOME"));
+		FILE *f= fopen(path, "at");
 		if(f!=NULL){
 			time_t t= time(NULL);
 			char *timeString= asctime(localtime(&t));
@@ -127,6 +130,17 @@
 // =====================================================
 
 int glestMain(int argc, char** argv){
+	if (!getenv("HOME")) 
+		throw runtime_error("HOME external variable is not set");
+
+	char path[PATH_MAX];
+	snprintf(path, PATH_MAX, "%s/.glest", getenv("HOME"));
+	mkdir(path, 0750);
+
+	snprintf(path, PATH_MAX, "%s/.glest/screens", getenv("HOME"));
+	mkdir(path, 0750);
+
+	chdir("/usr/share/games/glest");
 
 	MainWindow *mainWindow= NULL;
 	Program *program= NULL;
diff -ur glest-source-3.1.2/glest_game/main/program.cpp test_patch/glest_game/main/program.cpp
--- glest-source-3.1.2/glest_game/main/program.cpp	2008-02-24 17:27:05.000000000 -0300
+++ test_patch/glest_game/main/program.cpp	2008-05-27 01:59:16.000000000 -0300
@@ -197,8 +197,10 @@
 	updateCameraTimer.init(GameConstants::cameraFps, maxTimes);
 
     //log start
+	char path[PATH_MAX];
+	snprintf(path, PATH_MAX, "%s/.glest/glest.log", getenv("HOME"));
 	Logger &logger= Logger::getInstance();
-	logger.setFile("glest.log");
+	logger.setFile(path);
 	logger.clear();
 
 	//lang
diff -ur glest-source-3.1.2/shared_lib/sources/util/leak_dumper.cpp test_patch/shared_lib/sources/util/leak_dumper.cpp
--- glest-source-3.1.2/shared_lib/sources/util/leak_dumper.cpp	2008-01-22 18:10:59.000000000 -0200
+++ test_patch/shared_lib/sources/util/leak_dumper.cpp	2008-05-27 01:59:16.000000000 -0300
@@ -52,7 +52,9 @@
 }
 
 AllocRegistry::~AllocRegistry(){
-	dump("leak_dump.log");
+	char path[PATH_MAX];
+	snprintf(path, PATH_MAX, "%s/.glest/leak_dump.log", getenv("HOME"));
+	dump(path);
 }
 
 void AllocRegistry::allocate(AllocInfo info){
diff -ur glest-source-3.1.2/shared_lib/sources/util/profiler.cpp test_patch/shared_lib/sources/util/profiler.cpp
--- glest-source-3.1.2/shared_lib/sources/util/profiler.cpp	2008-01-22 18:10:59.000000000 -0200
+++ test_patch/shared_lib/sources/util/profiler.cpp	2008-05-27 01:59:16.000000000 -0300
@@ -71,7 +71,9 @@
 Profiler::~Profiler(){
 	rootSection->stop();
 
-	FILE *f= fopen("profiler.log", "w");
+	char path[PATH_MAX];
+	snprintf(path, PATH_MAX, "%s/.glest/profiler.log", getenv("HOME"));
+	FILE *f= fopen(path, "w");
 	if(f==NULL)
 		throw runtime_error("Can not open file: profiler.log");
 
